services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DEBUG=1
      - DATABASE_URL=postgresql://user:password@db:5432/tellingsupport
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tellingsupport
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  redis:
    image: "redis:alpine"

  celery:
    build: ./backend
    command: celery -A picturebook worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/tellingsupport

volumes:
  postgres_data:
